# Name of your application. Used to uniquely configure containers.
service: komadome

# Name of the container image.
image: takahashim/komadome

# Deploy to these servers.
servers:
  web:
    - 153.125.146.84

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: takahashim
  # Always use an access token rather than real password when possible.
  password:
    - MRSK_REGISTRY_PASSWORD

env:
  clear:
    DATABASE_NAME: shinonome_production
    RAILS_LOG_TO_STDOUT: ''
  secret:
    - RAILS_MASTER_KEY
    - DATABASE_HOST
    - DATABASE_USER
    - DATABASE_PASS
    - RSYNC_PASS_FILE
    - RSYNC_SERVER_PATH
    - CK_TOKEN
# Inject ENV variables into containers (secrets come from .env).
# env:
#   clear:
#     DB_HOST: 192.168.0.2
#   secret:
#     - RAILS_MASTER_KEY

# Call a broadcast command on deploys.
# audit_broadcast_cmd:
#   bin/broadcast_to_bc

# Use a different ssh user than root
# ssh:
#   user: app

# Configure builder setup.
# builder:
#   args:
#     RUBY_VERSION: 3.2.0
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1

builder:
  dockerfile: Dockerfile.production

accessories:
  monitoring:
    image: gcr.io/datadoghq/agent:7
    hosts:
      - 153.125.146.84
    port: 8126
    env:
      clear:
        DD_LOGS_ENABLED: true
        DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL: true
        DD_CONTAINER_EXCLUDE_LOGS: "name:shinonome-monitoring"
        DD_APM_NON_LOCAL_TRAFFIC: true
      secret:
        - DD_API_KEY
        - DD_SITE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /proc/:/host/proc/:ro
      - /opt/datadog-agent/run:/opt/datadog-agent/run:rw
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
  cronkicker:
    image: takahashim/cronkicker
    hosts:
      - 153.125.146.84
    files:
      - config/crontab:/var/spool/cron/crontabs/root
    env:
      secret:
        - CK_TOKEN


# Use accessory services (secrets come from .env).
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql.erb:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000
