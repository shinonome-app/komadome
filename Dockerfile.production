FROM ruby:3.4.2-slim

# Install dependencies
RUN apt-get update -qq && apt-get upgrade -y && apt-get install -y build-essential libvips curl libpq-dev rsync ssh cron libyaml-dev tzdata \
  && apt-get clean \
  && rm -rf /var/cache/apt/archives/* \
  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
  && truncate -s 0 /var/log/*log

# Set timezone to JST
RUN ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime && \
    echo "Asia/Tokyo" > /etc/timezone

# Mount $PWD to this workdir
RUN mkdir /myapp
WORKDIR /myapp

ARG GIT_SHA

ENV LANG="C.UTF-8"
ENV RAILS_ENV="production"
ENV NODE_ENV="production"
ENV SKYLIGHT_DEPLOY_GIT_SHA=$GIT_SHA

COPY Gemfile /myapp/Gemfile
COPY Gemfile.lock /myapp/Gemfile.lock
RUN bundle config jobs 4 \
 && bundle config deployment true \
 && bundle config without 'development test' \
 && bundle install

COPY . /myapp

# Copy crontab file for cron role
COPY config/docker-crontab /etc/cron.d/komadome-cron
COPY config/cron-build.sh /myapp/config/cron-build.sh
RUN chmod 0644 /etc/cron.d/komadome-cron && \
    chmod +x /myapp/config/cron-build.sh

# Copy and setup entrypoint script
COPY config/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

RUN SECRET_KEY_BASE=placeholder bundle exec rails assets:precompile

ENV RAILS_SERVE_STATIC_FILES="true"
ENV RAILS_LOG_TO_STDOUT="true"

EXPOSE 3000

ENTRYPOINT ["docker-entrypoint.sh"]
CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0", "-p", "3000"]
